## *************************************************
## MODELING: KNN TO PREDICT PERCENT PROFIT
## *************************************************
## 47% accuracy | DF USED: 'everything_USA' 
## ================================================
## STEP 1: LOAD THE DATA & LIBRARIES
## ================================================
library(ggplot2)
library(class)
library(dplyr)

model <- ('KNN')
#Setting working directory 
# setwd("C:\\Users\\ho511\\Desktop\\IST 707\\Team Project\\CSVs")
setwd("/Users/kosburn 1/syracuse/IST707/project/FINAL")

#Reading in the Movies Spreadsheet 
kNN_train_percProf <- read.csv("train_perc_profit.csv", header = TRUE)
kNN_test_percProf <- read.csv("test_perc_profit.csv", header= TRUE)

#Reading in the Movies Spreadsheet 
# kNN_train_percProf <- read.csv("everything_train_perc_profit.csv", header = TRUE)
# kNN_test_percProf <- read.csv("everything_test_perc_profit.csv", header= TRUE)

df_train <- kNN_train_percProf
df_test <- kNN_test_percProf

## REMOVE ANY POSSIBLE Xs in df_train
for(name in colnames(df_train)){
  if(grepl('X', name)){
    df_train <- df_train[,!colnames(df_train) %in% name]
    print(name)    
  }
}
## REMOVE ANY POSSIBLE Xs in df_test
for(name in colnames(df_test)){
  if(grepl('X', name)){
    df_test <- df_test[,!colnames(df_test) %in% name]
  }
}


## =================================================
## STEP 2: PREP DATA FOR SPECIFIC MODEL
## =================================================
#***************************************************
# kNN requires Numeric Data Only
# Remove the label from the training data 
# Save Label in a train_label vector 
#***************************************************

df_train_label <- df_train[,colnames(df_train) %in% ('percProf')]
df_test_label <- df_test[,colnames(df_test) %in% ('percProf')]

#Removing all columns that are factors
factorColumns <- df_train %>% Filter(f = is.factor) %>% names
df_train <- df_train[,!colnames(df_train) %in% factorColumns]
df_test <- df_test[,!colnames(df_test) %in% factorColumns]

#Removing gross and profit
df_train <- df_train[,!colnames(df_train) %in% c('gross', 'profit')]
df_test <- df_test[,!colnames(df_test) %in% c('gross', 'profit')]

#Changing everything to numeric from int 
df_train <- df_train %>% mutate_if(is.integer, as.numeric)
df_test <- df_test %>% mutate_if(is.integer, as.numeric)

## =================================================
## STEP 3: RUN THE MODEL
## =================================================
# Setting k as the sqrt of the number of rows of the dataset 
modelTitle <- (1)
modelname <- paste(model,"_", modelTitle, sep="")

(k <- round(sqrt(868)))
kNN <- class::knn(train = df_train, test = df_test, cl = df_train_label, k = k, prob = TRUE)
(table <- table(kNN, df_test_label))

(miscalculation_rate <- 1 - sum(diag(table))/sum(table))
(accuracy_rate <- sum(diag(table))/sum(table))
exportDf <- data.frame(modelname, accuracy_rate, table ,accuracy)
exportDf
filenameCSV <- paste(modelname, ".csv", sep="")
write.csv(exportDf, file = filenameCSV)

## =================================================
## STEP 4: MAKE THE VIZ
## =================================================
## nf stands for Number of Factors we are trying to predit
## nt stands for Number of Test objects within each factor
## TODO change percProf to varToTest

ggfilename <- paste(model, "_GG.png", sep="")
varToTest <- levels(df_train_label)
nf <- length(varToTest)
nt <- (nrow(df_test)/nf)
model <- replicate(nf, "vis")
accuracy <- c(diag(table)/nt*100)
model_accuracy <- data.frame(varToTest, model, accuracy)
(model_plot <- ggplot(model_accuracy, aes(x = varToTest, y = accuracy, fill = rainbow(nf))) + geom_bar(stat = "identity") + theme(legend.position ="none") + scale_x_discrete(limit = varToTest))
(model_plot <- model_plot + ylab("Accuracy Percentage") + xlab("Percent Profit") + ggtitle("Accuracy Percentage for KNN Model for Percent Profit") + ylim(0, 100))+ggsave(ggfilename, plot = last_plot(), device = NULL)

